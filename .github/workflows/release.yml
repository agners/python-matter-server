name: Publish releases to PyPI

on:
  release:
    types: [published]

jobs:
  build-and-publish-pypi:
    name: Builds and publishes releases to PyPI
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.vars.outputs.tag }}
    steps:
      - uses: actions/checkout@v3.5.3
      - name: Get tag
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
      - name: Set up Python 3.10
        uses: actions/setup-python@v4.6.1
        with:
          python-version: "3.10"
      - name: Install build
        run: >-
          pip install build tomli tomli-w
      - name: Set Python project version from tag
        shell: python
        run: |-
          import tomli
          import tomli_w

          with open("pyproject.toml", "rb") as f:
            pyproject = tomli.load(f)

          pyproject["project"]["version"] = "${{ steps.vars.outputs.tag }}"

          with open("pyproject.toml", "wb") as f:
            tomli_w.dump(pyproject, f)
      - name: Build
        run: >-
          python3 -m build
      - name: Publish release to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.6
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
  build-and-push-container-image:
    name: Builds and pushes the Matter Server container to ghcr.io
    runs-on: ubuntu-latest
    needs: build-and-publish-pypi
    steps:
      - uses: actions/checkout@v3.5.3
      - name: Log in to the GitHub container registry
        uses: docker/login-action@v2.1.0
        with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.2.1
      - name: Build and Push
        uses: docker/build-push-action@v3.3.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: Dockerfile
          tags: ghcr.io/${{ github.repository_owner }}/python-matter-server:${{ needs.build-and-publish-pypi.outputs.version }}
          push: true
          build-args:
            "PYTHON_MATTER_SERVER=${{ needs.build-and-publish-pypi.outputs.version }}"
